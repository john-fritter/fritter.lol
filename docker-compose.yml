version: "3.9"

services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8080
    volumes:
      - ./config/qbittorrent:/config
      - ./media/downloads:/downloads
    restart: unless-stopped

  jellyfin:
    image: jellyfin/jellyfin
    container_name: jellyfin
    restart: unless-stopped
    ports:
      - "8096:8096"
    volumes:
      - /srv/seedbox/config/jellyfin:/config
      - /srv/seedbox/media:/media
      - /srv/seedbox/cache/jellyfin:/cache
    environment:
      - TZ=America/Los_Angeles
    networks: [ default ]

  jellyseerr:
    image: fallenbagel/jellyseerr
    container_name: jellyseerr
    restart: unless-stopped
    ports: [ "5055:5055" ]
    environment:
      - LOG_LEVEL=info
      - TZ=America/Los_Angeles
    volumes:
      # IMPORTANT: must mount to /app/config (not /config)
      - /srv/seedbox/config/jellyseerr:/app/config
    networks: [ default ]

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/radarr:/config
      - ./media:/media
      - ./media/downloads:/downloads
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/sonarr:/config
      - ./media:/media
      - ./media/downloads:/downloads
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/bazarr:/config
      - ./media/movies:/movies
      - ./media/tv:/tv
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/prowlarr:/config
    restart: unless-stopped

  cloudcmd:
    image: coderaiser/cloudcmd:latest
    container_name: cloudcmd
    environment:
      - CLOUDCMD_AUTH=true
      - CLOUDCMD_USERNAME=admin
      - CLOUDCMD_ROOT=/data # what to show
      - CLOUDCMD_TERMINAL=false # no web shell (safer)
      - CLOUDCMD_OPEN=false # no external open
    volumes:
      - ./config/cloudcmd/.cloudcmd.json:/root/.cloudcmd.json:ro
      - ./media:/data
    restart: unless-stopped

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - TZ=America/Los_Angeles
    restart: unless-stopped

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./config/caddy/data:/data
      - ./config/caddy/config:/config
      - ./site:/srv/site
      - ./caddy_logs:/var/log/caddy
    restart: unless-stopped

  dashy:
    image: lissy93/dashy:latest
    container_name: dashy
    volumes:
      - ./config/dashy/conf.yml:/app/user-data/conf.yml
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node_exporter
    network_mode: host
    pid: host
    restart: unless-stopped
    command:
      - '--web.listen-address=0.0.0.0:9100'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|run/docker/netns)($$|/)'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_COOKIE_SAMESITE=None
      - GF_SECURITY_COOKIE_SECURE=true

  media-proxy:
    build:
      context: /srv/seedbox/media-proxy
    environment:
      - PORT=8080
      - JELLYFIN_URL=http://jellyfin:8096
      - JELLYFIN_TOKEN=${JELLYFIN_API_KEY}
      - JELLYFIN_USER_ID=${JELLYFIN_USER_ID}
      - TIMEOUT_MS=5000
      - JELLYFIN_DB_PATH=/jellyfin-config/data/jellyfin.db
    volumes:
      - /srv/seedbox/config/jellyfin:/jellyfin-config:ro
    networks:
      - default
    restart: unless-stopped
    depends_on:
      jellyfin:
        condition: service_started

volumes:
  prometheus-data: {}
  grafana-data: {}
