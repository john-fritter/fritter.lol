version: "3.9"

services:
  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      - PUID=1000
      - PGID=1000
      - WEBUI_PORT=8080
    volumes:
      - ./config/qbittorrent:/config
      - ./media/downloads:/downloads
    restart: unless-stopped

  plex:
    image: lscr.io/linuxserver/plex:latest
    container_name: plex
    #    network_mode: host
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
      - VERSION=docker
      - PLEX_CLAIM=claim-QoKXezxCgYy5GjzrXHRv
    ports:
      - 32400:32400
    volumes:
      - ./config/plex:/config
      - ./media:/media
    restart: unless-stopped

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/radarr:/config
      - ./media:/media
      - ./media/downloads:/downloads
    restart: unless-stopped

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/sonarr:/config
      - ./media:/media
      - ./media/downloads:/downloads
    restart: unless-stopped

  bazarr:
    image: lscr.io/linuxserver/bazarr:latest
    container_name: bazarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/bazarr:/config
      - ./media/movies:/movies
      - ./media/tv:/tv
    restart: unless-stopped

  prowlarr:
    image: lscr.io/linuxserver/prowlarr:latest
    container_name: prowlarr
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    volumes:
      - ./config/prowlarr:/config
    restart: unless-stopped

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=America/Los_Angeles
    volumes:
      - ./config/overseerr:/app/config
    restart: unless-stopped

  cloudcmd:
    image: coderaiser/cloudcmd:latest
    container_name: cloudcmd
    environment:
      - CLOUDCMD_AUTH=true
      - CLOUDCMD_USERNAME=admin
      - CLOUDCMD_ROOT=/data # what to show
      - CLOUDCMD_TERMINAL=false # no web shell (safer)
      - CLOUDCMD_OPEN=false # no external open
    volumes:
      - ./config/cloudcmd/.cloudcmd.json:/root/.cloudcmd.json:ro
      - ./media:/data
    restart: unless-stopped

  flaresolverr:
    image: flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    environment:
      - LOG_LEVEL=info
      - TZ=America/Los_Angeles
    restart: unless-stopped

  caddy:
    image: caddy:latest
    container_name: caddy
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./config/caddy/data:/data
      - ./config/caddy/config:/config
      - ./site:/srv/site
      - ./caddy_logs:/var/log/caddy
    restart: unless-stopped

  dashy:
    image: lissy93/dashy:latest
    container_name: dashy
    volumes:
      - ./config/dashy/conf.yml:/app/user-data/conf.yml
    restart: unless-stopped

  node_exporter:
    image: prom/node-exporter:v1.8.2
    container_name: node_exporter
    network_mode: host
    pid: host
    restart: unless-stopped
    command:
      - '--web.listen-address=0.0.0.0:9100'
      - '--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc|run/docker/netns)($$|/)'

  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    container_name: cadvisor
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /var/lib/docker/:/var/lib/docker:ro
    restart: unless-stopped

  prometheus:
    image: prom/prometheus
    container_name: prometheus
    restart: unless-stopped
    volumes:
      - ./config/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    extra_hosts:
      - "host.docker.internal:host-gateway"

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    volumes:
      - grafana-data:/var/lib/grafana
    restart: unless-stopped
    environment:
      - GF_SECURITY_ALLOW_EMBEDDING=true
      - GF_AUTH_ANONYMOUS_ENABLED=true
      - GF_AUTH_ANONYMOUS_ORG_ROLE=Viewer
      - GF_SECURITY_COOKIE_SAMESITE=None
      - GF_SECURITY_COOKIE_SECURE=true

  tautulli:
    image: lscr.io/linuxserver/tautulli:latest
    container_name: tautulli
    restart: unless-stopped
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=America/Los_Angeles
    ports:
      - "8181:8181"
    volumes:
      - ./config/tautulli:/config
      - /etc/localtime:/etc/localtime:ro
    networks:
      - default
    depends_on:
      - plex
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:8181/status" ]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  media-proxy:
    build:
      context: /srv/seedbox/media-proxy
    environment:
      - PORT=8080
      - TAUTULLI_URL=http://tautulli:8181
      - TAUTULLI_KEY=${TAUTULLI_API_KEY}
      - OVERSEERR_URL=http://overseerr:5055
      - OVERSEERR_KEY=${OVERSEERR_API_KEY}
      - PLEX_URL=http://plex:32400
      - PLEX_TOKEN=${PLEX_TOKEN}
      - TAUTULLI_PUBLIC_EMBED=
      - TIMEOUT_MS=5000
    networks:
      - default
    restart: unless-stopped
    depends_on:
      tautulli:
        condition: service_healthy
      overseerr:
        condition: service_started

volumes:
  prometheus-data: {}
  grafana-data: {}
